package sec03;

/*
작성자: 김보람
작성일: 2023-02-24
키워드: 배열생성
포인트: 값의 목록으로 배열 객체를 생성할 때 주의할 점은, 배열 변수를 이미 선언한 후 에는 다른 실행문에서 중괄호를 사용한 배열 생성이 허용되지 않는다.
 */

public class ArrayCreateByValueListExample2 {

	public static void main(String[] args) {
		int[] scores; // 배열을 사용하기 위해서는 우선 배열 변수를 선언해야 한다. 배열 변수 선언은 두 가지 형식으로 작성할 수 있다.
						// 형식1) 타입[] 변수; -> 대괄호 []는 배열 변수를 선언하는 기호로 사용된다. 타입 뒤에 붙을 수도 있고/
						// 형식2) 타입 변수[]; -> 변수 뒤에 붙을 수도 있다.
						// 타입은 배열에 저장될 데이터의 타입을 말한다.
						// 배열 변수는 참조 변수에 속한다. 배열도 객체이므로 힙 영역에 생성되고, 배열 변수는 힙 영역의 배열 객체를 참조한다.
						// 만일 참조할 배열 객체가 없다면 배열 변수는 null값으로 초기화될 수 있다. -> 타입[] 변수 = null
						// 만약 배열 변수가 null 값을 사진 상태에서 변수[인덱스]로 값을 읽거나 저장하게 되면 NullPointerException(예외)이
						// 발생된다.
						// 배열을 생성하고 배열 변수가 참조하는 상태에서 값을 저장하거나 읽어야 한다.

		scores = new int[] { 83, 90, 87 };	// 배열 변수를 미리 선언한 후 값 목록들이 나중에 결정되는 상황이라면 다음과 같이 new 연산자를 사용해서 값 목록을 지정해주면 된다.
		int sum1 = 0;						// new 연산자 바로 뒤에는 배열 변수 선언에서 사용한 "타입[]"를 붙여주고 중괄호{}에는 값들을 나열해준다.	
		for (int i = 0; i < 3; i++) {
			sum1 += scores[i];
		}
		System.out.println("총합 : " + sum1);

		int sum2 = add(new int[] { 83, 90, 87 });	// 
		System.out.println("총합 : " + sum2);
		System.out.println();
	}

	public static int add(int[] scores) {	// 총합을 계산해서 리턴하는 메소드 add()
		int sum = 0;						// 매개 변수로 int[] 배열이 선언된 add() 메소드가 있을 경우, 값 목록으로 배열을 생성함과 동시에 add() 메소드의 매개값으로 사용하고자 할 때는 반드시 new 연산자를 사용해야한다.
		for (int i = 0; i < 3; i++) {
			sum += scores[i];
		}
		return sum;
	}

}
